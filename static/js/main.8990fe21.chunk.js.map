{"version":3,"sources":["utils/fetchClient.ts","api/todos.ts","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","types/Filter.ts","components/TodoFilter/TodoFilter.tsx","components/Footer/Footer.tsx","components/NewTodo/NewTodo.tsx","types/ErrorType.ts","App.tsx","index.tsx"],"names":["request","url","delay","data","arguments","length","undefined","options","method","body","JSON","stringify","headers","Promise","resolve","setTimeout","then","fetch","response","ok","Error","json","client","updateTodo","todoId","concat","TodoItem","memo","_ref","todo","deleteTodo","onChangeCompleted","onUpdateTitle","_useState","useState","_useState2","_slicedToArray","isEditing","setIsEditing","_useState3","_useState4","newTitle","setNewTitle","handleChangeCompleted","useCallback","event","id","target","checked","handleDeleteTodo","handleDoubleClick","title","handleBlur","handleKeyDown","key","handleTitleSubmit","preventDefault","trim","_jsxs","className","classnames","completed","children","_jsx","htmlFor","type","onChange","onSubmit","placeholder","value","onBlur","onKeyDown","_Fragment","onClick","onDoubleClick","TodoList","todos","tempTodo","map","Filter","TodoFilter","filterBy","setFilterBy","href","selected","All","Active","Completed","Footer","activeCount","isCompleted","clearCompleted","hidden","NewTodo","makeTodo","isLoading","_React$useState","React","_React$useState2","setTitle","disabled","ErrorType","USER_ID","App","setTodos","hasError","setHasError","_useState5","_useState6","_useState7","_useState8","setIsLoading","_useState9","_useState10","setTempTodo","loadTodos","_asyncToGenerator","_regeneratorRuntime","mark","_callee","todosFromServer","wrap","_context","prev","next","sent","t0","Load","stop","useEffect","filter","some","filteredTodos","_ref2","_callee2","newTodo","addedTodo","_context2","Title","abrupt","userId","_objectSpread","prevTodos","_toConsumableArray","Add","finish","_x","apply","_ref3","_callee3","_context3","currentTodos","Delete","_x2","_callee4","_context4","forEach","toggleAll","_callee5","isAllCompleted","updatedTodos","_context5","every","changeCompleted","_ref6","_callee6","_context6","Update","_x3","_x4","handleUpdateTitle","_ref7","_callee7","_context7","_x5","_x6","active","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.8990fe21.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nconst BASE_URL = 'https://mate.academy/students-api';\n\n// returns a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // we wait for testing purpose to see loaders\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import { Todo } from '../types/Todo';\nimport { TempTodo } from '../types/typeDefs';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const addTodo = (todo: TempTodo) => {\n  return client.post<Todo>('/todos', todo);\n};\n\nexport const removeTodo = (id: number) => {\n  return client.delete(`/todos/${id}`);\n};\n\nexport const updateTodo = (todoId: number, data: Partial<Todo>) => {\n  return client.patch<Todo>(`/todos/${todoId}`, data);\n};\n","import React, {\n  ChangeEvent,\n  FormEvent,\n  memo,\n  useCallback,\n  useState,\n} from 'react';\nimport classnames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { updateTodo } from '../../api/todos';\n\ninterface Props {\n  todo: Todo;\n  deleteTodo: (todoId: number) => void;\n  onChangeCompleted: (todoId: number, completed: boolean) => void;\n  onUpdateTitle: (todoId: number, title: string) => void;\n}\n\nexport const TodoItem: React.FC<Props> = memo(({\n  todo,\n  deleteTodo,\n  onChangeCompleted,\n  onUpdateTitle,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [newTitle, setNewTitle] = useState('');\n\n  const handleChangeCompleted = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      onChangeCompleted(todo.id, event.target.checked);\n    }, [todo.id, onChangeCompleted],\n  );\n\n  const handleDeleteTodo = useCallback(() => deleteTodo(todo.id), [todo.id]);\n\n  const handleDoubleClick = useCallback(() => {\n    setIsEditing(true);\n    setNewTitle(todo.title);\n  }, [todo.title]);\n\n  const handleBlur = useCallback(() => {\n    setIsEditing(false);\n    onUpdateTitle(todo.id, newTitle);\n  }, [todo.id, newTitle, onUpdateTitle]);\n\n  const handleKeyDown = useCallback((event: React.KeyboardEvent) => {\n    if (event.key === 'Enter') {\n      setIsEditing(false);\n      onUpdateTitle(todo.id, newTitle);\n    }\n\n    if (event.key === 'Escape') {\n      setIsEditing(false);\n      setNewTitle(todo.title);\n    }\n  }, [todo.id, newTitle, onUpdateTitle]);\n\n  const handleTitleSubmit = useCallback(\n    (event: FormEvent) => {\n      event.preventDefault();\n      setIsEditing(false);\n\n      if (newTitle.trim()) {\n        onUpdateTitle(todo.id, newTitle);\n        updateTodo(todo.id, { title: newTitle });\n      } else {\n        deleteTodo(todo.id);\n      }\n    }, [todo.id, newTitle, onUpdateTitle, deleteTodo],\n  );\n\n  return (\n    <div\n      className={classnames('todo', {\n        completed: todo.completed,\n      })}\n    >\n      <label className=\"todo__status-label\" htmlFor=\"checkBox\">\n        <input\n          id=\"checkBox\"\n          type=\"checkbox\"\n          className=\"todo__status\"\n          checked={todo.completed}\n          onChange={handleChangeCompleted}\n        />\n      </label>\n\n      {isEditing ? (\n        <form onSubmit={handleTitleSubmit}>\n          <input\n            type=\"text\"\n            className=\"todo__title-field\"\n            placeholder=\"Empty todo will be deleted\"\n            value={newTitle}\n            onChange={event => {\n              setNewTitle(event.target.value);\n            }}\n            onBlur={handleBlur}\n            onKeyDown={handleKeyDown}\n          />\n        </form>\n      ) : (\n        <>\n          <button\n            type=\"button\"\n            className=\"todo__remove\"\n            onClick={handleDeleteTodo}\n          >\n            ×\n          </button>\n\n          <span\n            className=\"todo__title\"\n            onDoubleClick={handleDoubleClick}\n          >\n            {todo.title}\n          </span>\n        </>\n      )}\n\n      {/* overlay will cover the todo while it is being updated */}\n      <div className=\"modal overlay\">\n        <div className=\"modal-background has-background-white-ter\" />\n        <div className=\"loader\" />\n      </div>\n    </div>\n  );\n});\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ninterface Props {\n  todos: Todo[];\n  tempTodo: Todo | null;\n  deleteTodo: (todoId: number) => void;\n  onChangeCompleted: (todoId: number, completed: boolean) => void;\n  onUpdateTitle: (todoId: number, title: string) => void;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  tempTodo,\n  deleteTodo,\n  onChangeCompleted,\n  onUpdateTitle,\n}) => (\n  <section className=\"todoapp__main\">\n    {todos.map(todo => (\n      <TodoItem\n        todo={todo}\n        key={todo.id}\n        deleteTodo={deleteTodo}\n        onChangeCompleted={onChangeCompleted}\n        onUpdateTitle={onUpdateTitle}\n      />\n    ))}\n\n    {tempTodo && (\n      <TodoItem\n        todo={tempTodo}\n        key={tempTodo.id}\n        deleteTodo={deleteTodo}\n        onChangeCompleted={onChangeCompleted}\n        onUpdateTitle={onUpdateTitle}\n      />\n    )}\n  </section>\n);\n","// eslint-disable-next-line no-shadow\nexport enum Filter {\n  All = 'All',\n  Active = 'Active',\n  Completed = 'Completed',\n}\n","import React from 'react';\nimport classnames from 'classnames';\nimport { Filter } from '../../types/Filter';\n\ninterface Props {\n  filterBy: Filter;\n  setFilterBy: (filter: Filter) => void;\n}\n\nexport const TodoFilter: React.FC<Props> = ({ filterBy, setFilterBy }) => {\n  return (\n    <nav className=\"filter\">\n      <a\n        href=\"#/\"\n        className={classnames('filter__link',\n          { selected: filterBy === Filter.All })}\n        onClick={(event) => {\n          event.preventDefault();\n          setFilterBy(Filter.All);\n        }}\n      >\n        All\n      </a>\n\n      <a\n        href=\"#/active\"\n        className={classnames('filter__link',\n          { selected: filterBy === Filter.Active })}\n        onClick={(event) => {\n          event.preventDefault();\n          setFilterBy(Filter.Active);\n        }}\n      >\n        {Filter.Active}\n      </a>\n\n      <a\n        href=\"#/completed\"\n        className={classnames('filter__link',\n          { selected: filterBy === Filter.Completed })}\n        onClick={(event) => {\n          event.preventDefault();\n          setFilterBy(Filter.Completed);\n        }}\n      >\n        {Filter.Completed}\n      </a>\n    </nav>\n  );\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport { TodoFilter } from '../TodoFilter';\nimport { Filter } from '../../types/Filter';\n\ninterface Props {\n  filterBy: Filter;\n  setFilterBy: (filter: Filter) => void;\n  activeCount: number;\n  isCompleted: boolean;\n  clearCompleted: () => void;\n}\n\nexport const Footer: React.FC<Props> = ({\n  filterBy,\n  setFilterBy,\n  activeCount,\n  isCompleted,\n  clearCompleted,\n}) => {\n  return (\n    <footer className=\"todoapp__footer\">\n      <span className=\"todo-count\">\n        {`${activeCount} items left`}\n      </span>\n\n      <TodoFilter\n        filterBy={filterBy}\n        setFilterBy={setFilterBy}\n      />\n\n      <button\n        type=\"button\"\n        className={classnames('todoapp__clear-completed', {\n          hidden: !isCompleted,\n        })}\n        onClick={clearCompleted}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n","import React from 'react';\n// import { useState } from 'react';\n\nexport interface Props {\n  makeTodo: (newTitle: string) => void;\n  isLoading: boolean;\n}\n\nexport const NewTodo: React.FC<Props> = ({\n  makeTodo,\n  isLoading,\n}) => {\n  const [title, setTitle] = React.useState('');\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    makeTodo(title);\n    setTitle('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        className=\"todoapp__new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={title}\n        onChange={event => setTitle(event.target.value)}\n        disabled={isLoading}\n      />\n    </form>\n  );\n};\n","// eslint-disable-next-line no-shadow\nexport enum ErrorType {\n  'Add' = 'Unable to add todo',\n  'Delete' = 'Unable to delete todo',\n  'Load' = 'Unable to load todo',\n  'Title' = 'Title can\\'t be empty',\n  'Update' = 'Unable to update todo',\n}\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, {\n  useState,\n  useCallback,\n  useEffect,\n} from 'react';\nimport classnames from 'classnames';\nimport { UserWarning } from './UserWarning';\nimport { Todo } from './types/Todo';\nimport {\n  getTodos,\n  addTodo,\n  removeTodo,\n  updateTodo,\n} from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Footer } from './components/Footer';\nimport { NewTodo } from './components/NewTodo';\nimport { Filter } from './types/Filter';\nimport { ErrorType } from './types/ErrorType';\nimport { TempTodo } from './types/typeDefs';\n\nconst USER_ID = 10358;\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [hasError, setHasError] = useState('');\n  const [filterBy, setFilterBy] = useState<Filter>(Filter.All);\n  const [isLoading, setIsLoading] = useState(false);\n  const [tempTodo, setTempTodo] = useState<Todo | null>(null);\n\n  const loadTodos = useCallback(async () => {\n    try {\n      const todosFromServer = await getTodos(USER_ID);\n\n      setTodos(todosFromServer);\n    } catch {\n      setHasError(ErrorType.Load);\n      setTimeout(() => setHasError(ErrorType.Load), 3000);\n    }\n  }, []);\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const activeCount = todos.filter(todo => !todo.completed).length;\n  const isCompleted = todos.some(todo => todo.completed);\n\n  const filteredTodos = todos.filter(todo => {\n    switch (filterBy) {\n      case Filter.Completed:\n        return todo.completed;\n\n      case Filter.Active:\n        return !todo.completed;\n\n      case Filter.All:\n      default:\n        return true;\n    }\n  });\n\n  const makeTodo = useCallback(async (title: string) => {\n    setIsLoading(true);\n    setHasError('');\n\n    if (title.trim() === '') {\n      setHasError(ErrorType.Title);\n\n      return;\n    }\n\n    try {\n      const newTodo: TempTodo = {\n        title,\n        userId: USER_ID,\n        completed: false,\n      };\n\n      setTempTodo({ ...newTodo, id: 0 });\n      const addedTodo = await addTodo(newTodo);\n\n      setTodos((prevTodos) => [...prevTodos, addedTodo]);\n    } catch {\n      setHasError(ErrorType.Add);\n    } finally {\n      setTempTodo(null);\n      setIsLoading(false);\n    }\n  }, []);\n\n  const deleteTodo = useCallback(async (todoId: number) => {\n    setHasError('');\n    try {\n      await removeTodo(todoId);\n      setTodos((currentTodos) => (\n        currentTodos.filter(todo => todo.id !== todoId)\n      ));\n    } catch {\n      setHasError(ErrorType.Delete);\n    }\n  }, [todos]);\n\n  const clearCompleted = useCallback(async () => {\n    const todoIds = todos.filter(todo => todo.completed).map(todo => todo.id);\n\n    todoIds.forEach(todoId => deleteTodo(todoId));\n  }, [todos]);\n\n  const toggleAll = useCallback(async () => {\n    const isAllCompleted = todos.every(todo => todo.completed);\n\n    const updatedTodos = todos.map(todo => ({\n      ...todo,\n      completed: !isAllCompleted,\n    }));\n\n    setTodos(updatedTodos);\n  }, [todos]);\n\n  const changeCompleted = useCallback(async (\n    todoId: number, completed: boolean,\n  ) => {\n    setIsLoading(true);\n\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === todoId) {\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }\n\n      return todo;\n    });\n\n    try {\n      await updateTodo(todoId, { completed });\n      setTodos(updatedTodos);\n    } catch {\n      setHasError(ErrorType.Update);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [todos]);\n\n  const handleUpdateTitle = useCallback(async (\n    todoId: number,\n    title: string,\n  ) => {\n    setHasError('');\n    setIsLoading(true);\n\n    const updatedTodos = todos.map(todo => {\n      if (todo.id === todoId) {\n        return {\n          ...todo,\n          title,\n        };\n      }\n\n      return todo;\n    });\n\n    if (title.trim() === '') {\n      setHasError(ErrorType.Title);\n      deleteTodo(todoId);\n    }\n\n    try {\n      await updateTodo(todoId, { title });\n      setTodos(updatedTodos);\n    } catch {\n      setHasError(ErrorType.Update);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [todos]);\n\n  if (!USER_ID) {\n    return <UserWarning />;\n  }\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <header className=\"todoapp__header\">\n          { todos.length > 0 && (\n            <button\n              type=\"button\"\n              className={classnames('todoapp__toggle-all', {\n                hidden: !todos.length,\n                active: !activeCount,\n              })}\n              onClick={toggleAll}\n            />\n          )}\n\n          <NewTodo\n            makeTodo={makeTodo}\n            isLoading={isLoading}\n          />\n        </header>\n\n        {todos.length > 0 && (\n          <>\n            <TodoList\n              todos={filteredTodos}\n              tempTodo={tempTodo}\n              deleteTodo={deleteTodo}\n              onChangeCompleted={changeCompleted}\n              onUpdateTitle={handleUpdateTitle}\n            />\n            <Footer\n              filterBy={filterBy}\n              setFilterBy={setFilterBy}\n              activeCount={activeCount}\n              isCompleted={isCompleted}\n              clearCompleted={clearCompleted}\n            />\n          </>\n        )}\n      </div>\n\n      <div\n        className={classnames(\n          'notification is-danger is-light has-text-weight-normal', {\n            hidden: !hasError,\n          },\n        )}\n      >\n        <button\n          type=\"button\"\n          className=\"delete\"\n          onClick={() => setHasError('')}\n        />\n        {hasError}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './styles/index.scss';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<App />);\n"],"sourceRoot":""}